@model NWHarvest.Web.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register for Growing Connections";
    ViewBag.NavBarTitle = "Register";

    var userTypes = new List<SelectListItem>
    {
        new SelectListItem
        {
            Text = "Grower",
            Value = "IsGrower"
        },
        new SelectListItem
        {
            Text = "Food Program",
            Value = "IsFoodBank"
        }
    };

    var listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Both (Recommended)",
        Value = "both"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Text Notifications",
        Value = "textNote"
    });
    listItems.Add(new SelectListItem
    {
        Text = "E-Mail Notification",
        Value = "emailNote"
    });

    ViewBag.States = new List<SelectListItem>()
    {
        new SelectListItem
        {
            Text = "Washington",
            Value = "WA",
            Selected = true
        }
    };
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="">
        <div class="form-group">
            @Html.LabelFor(m => m.UserType, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.DropDownListFor(m => m.UserType, userTypes, "Select User Type", new { @class = "selectpicker form-control", @data_style = "btn-default" })
                @Html.ValidationMessageFor(m => m.UserType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmEmail, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.TextBoxFor(m => m.ConfirmEmail, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConfirmEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Address1, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.TextBoxFor(m => m.Address1, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Address1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Address2, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.TextBoxFor(m => m.Address2, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.City, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.State, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.DropDownListFor(m => m.State, ViewBag.States as List<SelectListItem>, "Select State", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Zip, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.TextBoxFor(m => m.Zip, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Notification, new { @class = "col-xs-10 col-xs-offset-1 control-label" })
            <div class="col-xs-10 col-xs-offset-1">
                @Html.DropDownListFor(m => m.Notification, listItems, "Select Notification Method", new { @class = "selectpicker form-control", @data_style = "btn-default" })
                @Html.ValidationMessageFor(m => m.Notification, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-10 col-xs-offset-1">
                <input type="submit" class="btn btn-success btn-block" value="Register" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
